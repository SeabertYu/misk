package misk.cloud.gcp.tracing

import brave.opentracing.BraveSpan
import com.google.cloud.logging.LogEntry
import com.google.cloud.logging.LoggingEnhancer
import datadog.opentracing.DDSpan
import io.opentracing.Tracer
import io.opentracing.util.GlobalTracer

/**
 * Add this enhancer to your project's Logback configuration to add trace ids to logs generated by
 * GCP's LoggingAppender
 */
class TracingLoggingEnhancer : LoggingEnhancer {
  override fun enhanceLogEntry(builder: LogEntry.Builder) {
    enhanceLogEntry(GlobalTracer.get(), builder)
  }

  fun enhanceLogEntry(tracer: Tracer, builder: LogEntry.Builder) {
    val activeSpan = tracer.activeSpan()
    var traceId: String? = null
    when (activeSpan) {
      is BraveSpan -> {
        val traceContext = activeSpan.unwrap().context()
        traceId = traceContext.traceIdString()
        // TODO(nb): figure out why traceIdString differs from string representation in StackDriver
        if (traceContext.traceIdHigh() == 0L) {
          traceId = "0000000000000000$traceId"
        }
      }
      is DDSpan -> traceId = activeSpan.context().toTraceId()
    }

    if (traceId != null) {
      builder.addLabel("appengine.googleapis.com/trace_id", traceId)
    }
  }
}
