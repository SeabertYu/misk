// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: routeguide/RouteGuideProto.proto
package routeguide;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * A latitude-longitude rectangle, represented as two diagonally opposite
 * points "lo" and "hi".
 */
public final class Rectangle extends Message<Rectangle, Rectangle.Builder> {
  public static final ProtoAdapter<Rectangle> ADAPTER = new ProtoAdapter_Rectangle();

  private static final long serialVersionUID = 0L;

  /**
   * One corner of the rectangle.
   */
  @WireField(
      tag = 1,
      adapter = "routeguide.Point#ADAPTER"
  )
  public final Point lo;

  /**
   * The other corner of the rectangle.
   */
  @WireField(
      tag = 2,
      adapter = "routeguide.Point#ADAPTER"
  )
  public final Point hi;

  public Rectangle(Point lo, Point hi) {
    this(lo, hi, ByteString.EMPTY);
  }

  public Rectangle(Point lo, Point hi, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.lo = lo;
    this.hi = hi;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.lo = lo;
    builder.hi = hi;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Rectangle)) return false;
    Rectangle o = (Rectangle) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(lo, o.lo)
        && Internal.equals(hi, o.hi);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (lo != null ? lo.hashCode() : 0);
      result = result * 37 + (hi != null ? hi.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (lo != null) builder.append(", lo=").append(lo);
    if (hi != null) builder.append(", hi=").append(hi);
    return builder.replace(0, 2, "Rectangle{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Rectangle, Builder> {
    public Point lo;

    public Point hi;

    public Builder() {
    }

    /**
     * One corner of the rectangle.
     */
    public Builder lo(Point lo) {
      this.lo = lo;
      return this;
    }

    /**
     * The other corner of the rectangle.
     */
    public Builder hi(Point hi) {
      this.hi = hi;
      return this;
    }

    @Override
    public Rectangle build() {
      return new Rectangle(lo, hi, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Rectangle extends ProtoAdapter<Rectangle> {
    public ProtoAdapter_Rectangle() {
      super(FieldEncoding.LENGTH_DELIMITED, Rectangle.class);
    }

    @Override
    public int encodedSize(Rectangle value) {
      return Point.ADAPTER.encodedSizeWithTag(1, value.lo)
          + Point.ADAPTER.encodedSizeWithTag(2, value.hi)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Rectangle value) throws IOException {
      Point.ADAPTER.encodeWithTag(writer, 1, value.lo);
      Point.ADAPTER.encodeWithTag(writer, 2, value.hi);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Rectangle decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.lo(Point.ADAPTER.decode(reader)); break;
          case 2: builder.hi(Point.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Rectangle redact(Rectangle value) {
      Builder builder = value.newBuilder();
      if (builder.lo != null) builder.lo = Point.ADAPTER.redact(builder.lo);
      if (builder.hi != null) builder.hi = Point.ADAPTER.redact(builder.hi);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
